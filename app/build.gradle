apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'


android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"
    dataBinding.enabled = true

    defaultConfig {
        applicationId "com.wickeddevs.easywars"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {

    apt 'com.google.dagger:dagger-compiler:2.0'
    testProvided 'com.google.dagger:dagger-compiler:2.0'
    androidTestApt 'com.google.dagger:dagger-compiler:2.0'

    compile fileTree(dir: 'libs', include: ['*.jar'])

    // App's dependencies, including test
    provided 'org.glassfish:javax.annotation:10.0-b28'
    //compile "com.google.guava:guava:$rootProject.guavaVersion"
    //compile "com.github.bumptech.glide:3.6.1"
    //compile "com.android.support.test.espresso:espresso-idling-resource:2.2.2"

    // Dependencies for local unit tests
    testCompile 'com.google.dagger:dagger:2.0'
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.powermock:powermock-module-junit4:1.6.2"
    testCompile "org.powermock:powermock-api-mockito:1.6.2"

    // Android Testing Support Library's runner and rules
    androidTestCompile 'com.google.dagger:dagger:2.0'
    androidTestCompile "com.android.support.test:runner:0.5"
    androidTestCompile "com.android.support.test:rules:0.5"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:2.2.2"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:2.2.2"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:2.2.2"

    //    compile 'com.android.support:support-v4:24.1.1'

    compile 'com.google.dagger:dagger:2.0'
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:design:24.1.1'
    compile 'com.android.support:support-v4:24.1.1'
    compile 'com.google.firebase:firebase-core:9.4.0'
    compile 'com.google.firebase:firebase-auth:9.4.0'
    compile 'com.google.firebase:firebase-database:9.4.0'
    compile 'com.firebaseui:firebase-ui-auth:0.4.4'
    compile 'com.github.bumptech.glide:glide:3.7.0'
}

configurations.all {
    resolutionStrategy.force "com.android.support:design:24.1.1"
    resolutionStrategy.force "com.android.support:support-v4:24.1.1"
    resolutionStrategy.force "com.android.support:appcompat-v7:24.1.1"
    resolutionStrategy.force "com.android.support:support-annotations:24.1.1"
}

apply plugin: 'com.google.gms.google-services'

//
///*
//All direct/transitive dependencies shared between your test and production APKs need to be
//excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
//excluding these dependencies from your test configuration will result in an dex pre-verifier error
//at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
//*/
//configurations.compile.dependencies.each { compileDependency ->
//    println "Excluding compile dependency: ${compileDependency.getName()}"
//    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
//        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
//    }
//}